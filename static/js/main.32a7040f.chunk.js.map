{"version":3,"sources":["components/Carousel/Carousel.jsx","types.js","App.jsx","index.js"],"names":["Carousel","PropTypes","arrayOf","string","isRequired","number","bool","state","currentListPosition","scrollStep","availableWidth","frameWidth","infinite","maxScrollRange","this","setState","props","images","step","frameSize","itemWidth","animationDuration","listWidth","length","listStyles","width","transitionDuration","transform","imgStyles","height","containerWidth","containerStyles","className","type","onClick","scrollLeft","style","map","image","key","Math","random","src","alt","scrollRight","React","Component","App","maxElements","increment","decrement","action","decreaseFrameSize","increaseFrameSize","decreaseImgSize","increaseImgSize","decreaseStepSize","increaseStepSize","decreaseAnimationDuration","increaseAnimationDuration","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32a7040f.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\nimport { carouselShape } from '../../types';\n\nclass Carousel extends React.Component {\n  state = {\n    currentListPosition: 0,\n  }\n\n  scrollRight(scrollStep, availableWidth, frameWidth, infinite) {\n    const maxScrollRange = -availableWidth + frameWidth;\n\n    this.setState(({ currentListPosition }) => {\n      if (!infinite) {\n        return currentListPosition - scrollStep < maxScrollRange\n          ? { currentListPosition: maxScrollRange }\n          : {\n            currentListPosition: currentListPosition - scrollStep,\n          };\n      }\n\n      if (currentListPosition === maxScrollRange) {\n        return { currentListPosition: 0 };\n      }\n\n      if (currentListPosition - scrollStep < maxScrollRange) {\n        return { currentListPosition: maxScrollRange };\n      }\n\n      return {\n        currentListPosition: currentListPosition - scrollStep,\n      };\n    });\n  }\n\n  scrollLeft(scrollStep, availableWidth, frameWidth, infinite) {\n    const maxScrollRange = -availableWidth + frameWidth;\n    const initialScrollPosition = 0;\n\n    this.setState(({ currentListPosition }) => {\n      if (!infinite) {\n        return currentListPosition + scrollStep >= initialScrollPosition\n          ? { currentListPosition: initialScrollPosition }\n          : {\n            currentListPosition: currentListPosition + scrollStep,\n          };\n      }\n\n      if (currentListPosition === initialScrollPosition) {\n        return { currentListPosition: maxScrollRange };\n      }\n\n      if (currentListPosition + scrollStep >= initialScrollPosition) {\n        return { currentListPosition: initialScrollPosition };\n      }\n\n      return {\n        currentListPosition: currentListPosition + scrollStep,\n      };\n    });\n  }\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { currentListPosition } = this.state;\n    const listWidth = itemWidth * images.length;\n    const listStyles = {\n      width: `${listWidth}px`,\n      transitionDuration: `${animationDuration}ms`,\n      transform: `translateX(${currentListPosition}px)`,\n    };\n    const imgStyles = {\n      width: `${itemWidth}px`,\n      height: `${itemWidth}px`,\n    };\n    const containerWidth = frameSize * itemWidth;\n    const containerStyles = {\n      width: `${containerWidth}px`,\n    };\n    const scrollStep = itemWidth * step;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={() => {\n            this.scrollLeft(scrollStep, listWidth, containerWidth, infinite);\n          }}\n        >\n          &#10094;\n        </button>\n        <div style={containerStyles} className=\"container\">\n          <ul style={listStyles} className=\"Carousel__list\">\n            {images.map(image => (\n              <li key={Math.random()}>\n                <img style={imgStyles} src={image} alt=\"emoji\" />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={() => {\n            this.scrollRight(scrollStep, listWidth, containerWidth, infinite);\n          }}\n        >\n          &#10095;\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = carouselShape;\n\nexport default Carousel;\n","import PropTypes, { string } from 'prop-types';\n\nexport const carouselShape = {\n  images: PropTypes.arrayOf(string).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  increaseFrameSize(maxElements) {\n    this.setState(({ frameSize }) => {\n      if (frameSize === maxElements) {\n        return { frameSize };\n      }\n\n      return { frameSize: frameSize + 1 };\n    });\n  }\n\n  decreaseFrameSize() {\n    this.setState(({ frameSize }) => {\n      if (frameSize === 1) {\n        return { frameSize };\n      }\n\n      return { frameSize: frameSize - 1 };\n    });\n  }\n\n  increaseImgSize(increment) {\n    this.setState(({ itemWidth }) => {\n      if (itemWidth > 300) {\n        return { itemWidth };\n      }\n\n      return { itemWidth: itemWidth + increment };\n    });\n  }\n\n  decreaseImgSize(decrement) {\n    this.setState(({ itemWidth }) => {\n      if (itemWidth < 11) {\n        return { itemWidth };\n      }\n\n      return { itemWidth: itemWidth - decrement };\n    });\n  }\n\n  increaseStepSize(maxElements) {\n    this.setState(({ step }) => {\n      if (step === maxElements) {\n        return { step };\n      }\n\n      return { step: step + 1 };\n    });\n  }\n\n  increaseAnimationDuration() {\n    this.setState(({ animationDuration }) => {\n      if (animationDuration > 9900) {\n        return { animationDuration };\n      }\n\n      return { animationDuration: animationDuration + 100 };\n    });\n  }\n\n  decreaseAnimationDuration() {\n    this.setState(({ animationDuration }) => {\n      if (animationDuration === 100) {\n        return { animationDuration };\n      }\n\n      return { animationDuration: animationDuration - 100 };\n    });\n  }\n\n  decreaseStepSize() {\n    this.setState(({ step }) => {\n      if (step === 1) {\n        return { step };\n      }\n\n      return { step: step - 1 };\n    });\n  }\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Carousel with images</h1>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <form action=\"#\" className=\"form\">\n          <h2>Increase frame size:</h2>\n          <div className=\"form__increase-size-container\">\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => {\n                this.decreaseFrameSize();\n              }}\n            >\n              -1\n            </button>\n            <p>{frameSize}</p>\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => {\n                this.increaseFrameSize(images.length);\n              }}\n            >\n              +1\n            </button>\n          </div>\n          <h2>Increase image size:</h2>\n          <div className=\"form__increase-size-container\">\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => this.decreaseImgSize(10)}\n            >\n              -10px\n            </button>\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => this.decreaseImgSize(1)}\n            >\n              -1px\n            </button>\n            <p>{`${itemWidth}px`}</p>\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => this.increaseImgSize(1)}\n            >\n              +1px\n            </button>\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => this.increaseImgSize(10)}\n            >\n              +10px\n            </button>\n          </div>\n          <h2>Number of images scrolled per click:</h2>\n          <div className=\"form__increase-size-container\">\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => {\n                this.decreaseStepSize();\n              }}\n            >\n              -1\n            </button>\n            <p>{step}</p>\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => {\n                this.increaseStepSize(images.length);\n              }}\n            >\n              +1\n            </button>\n          </div>\n          <h2>Duration of animation:</h2>\n          <div className=\"form__increase-size-container\">\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => {\n                this.decreaseAnimationDuration();\n              }}\n            >\n              -100\n            </button>\n            <p>{`${animationDuration}ms`}</p>\n            <button\n              type=\"button\"\n              className=\"form__button\"\n              onClick={() => {\n                this.increaseAnimationDuration();\n              }}\n            >\n              +100\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            className=\"form__button\"\n            onClick={() => {\n              this.setState({ infinite: !infinite });\n            }}\n          >\n            Infinite:\n            {' '}\n            {infinite ? 'on' : 'off'}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}